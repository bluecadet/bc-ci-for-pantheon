defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:6.x
  working_directory: ~/example_drops_8_composer
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #=========================================================================
    TZ: "/usr/share/zoneinfo/America/New_York"

    # The variables below usually do not need to be modified.

    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================

    # NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    # BUILD_TOOLS_VERSION: ^2.0.0-beta1
    TERM: dumb
    CMS_PLATFORM: D8
    # CMS_PLATFORM: D7
    # CMS_PLATFORM: WP


version: 2.1
jobs:
    build_and_deploy:
        <<: *defaults

        steps:
            - checkout

            - attach_workspace:
                at: /tmp/workspace

            # - restore_cache:
            #     keys:
            #         - composer-cache-{{ arch }}

            - restore_cache:
                keys:
                    - npm-deps-build_and_deploy-{{ checksum "package-lock.json" }}-{{ arch }}

            # Init Env variables.
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/init-env-vars.sh

            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - git_data/*
                    - bash_env.txt

            - run:
                name: Check if we should continue.
                command: |
                    if [ "$SHOULD_BUILD_JOB" = false ] ; then
                        echo -e "No need to keep running job."
                        circleci-agent step halt
                    fi

            - run:
                name: log in
                command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

            - run:
                name: install dev dependencies, build assets, etc.
                command: ./.ci/scripts/env/prepare-for-pantheon.sh

            # - run:
            #     name: build assets
            #     command: composer -n build-assets

            - run:
                name: run npm install
                command: npm install

            - save_cache:
                key: npm-deps-build_and_deploy-{{ checksum "package-lock.json" }}-{{ arch }}
                paths:
                    - ./node_modules

            - run:
                name: Run Gulp
                command: node_modules/.bin/gulp build

            # Favicons should be built and commited. They do not change/update
            # enough to take up the CI build time.
            # - run:
            #     name: Build Favicons
            #     command: node_modules/.bin/gulp favicon

            - run:
                name: Deploy Code to Pantheon
                command: ./.ci/scripts/env/deploy-to-pantheon.sh

            - run:
                name: Post deploy actions
                command: ./.ci/scripts/env/post-deploy-to-pantheon.sh

            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - git_data/*
                    - bash_env.txt

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    testing_unit:
        <<: *defaults
        # docker:
        #     - image: quay.io/peteinge/build-tools:unit-1.x

        steps:
            - checkout

            # - restore_cache:
            #     keys:
            #         - composer-cache-{{ arch }}

            - restore_cache:
                keys:
                    - npm-deps-testing_unit-{{ checksum "package-lock.json" }}-{{ arch }}

            - attach_workspace:
                at: /tmp/workspace

            # Restore and Set job env variables. And EXIT IF NEED BE
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/set-env-vars.sh

            - run:
                name: log in
                command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

            - run:
                name: run composer install to get the vendor directory
                command: composer install

            # - save_cache:
            #     key: composer-cache-{{ arch }}
            #     paths:
            #         - $HOME/.composer/cache

            - run:
                name: run npm install
                command: npm install

            - save_cache:
                key: npm-deps-testing_unit-{{ checksum "package-lock.json" }}-{{ arch }}
                paths:
                    - ./node_modules

            # Code sniffer.
            - run:
                name: Check coding standards
                command: ./.ci/scripts/tests/code-sniff-tests.sh

            # HTML Validator
            - run:
                name: install html validator
                command: npm i site-validator-cli -g

            - run:
                name: Run HTML Validator
                command: ./.ci/scripts/tests/html-validation-tests.sh

            # PHPunit
            - run:
                name: Run PHP Unit test
                command: ./.ci/scripts/tests/phpunit-tests.sh

            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - bash/*
                    - coder/*
                    - coder_bash_env.txt
                    - phpunit/*
                    - phpunit_bash_env.txt

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    testing_vis_reg:
        <<: *defaults
        docker:
            - image: backstopjs/backstopjs:3.9.5

        steps:
            - checkout

            - attach_workspace:
                at: /tmp/workspace

            - restore_cache:
                keys:
                    - npm-deps-testing_vis_reg-{{ checksum "package-lock.json" }}-{{ arch }}

            - run:
                name: run npm install
                command: npm install

            - save_cache:
                key: npm-deps-testing_vis_reg{{ checksum "package-lock.json" }}-{{ arch }}
                paths:
                    - ./node_modules

            # Restore and Set job env variables. And EXIT IF NEED BE
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/set-env-vars.sh

            - run:
                name: visual regression test
                command: ./.ci/scripts/tests/backstopjs-test.sh

            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - vr_bash_env.txt

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    testing_performance:
        <<: *defaults
        docker:
            - image: ataylorme/docker-node-advanced-wordpress-on-pantheon:lighthouse

        steps:
            - checkout

            - attach_workspace:
                at: /tmp/workspace

            # Restore and Set job env variables. And EXIT IF NEED BE
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/set-env-vars.sh

            - run:
                name: run lighthouse tests
                command: ./.ci/scripts/tests/lighthouse-perf-test.sh
                no_output_timeout: 30m


            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - lighthouse/*
                    - lighthouse_bash_env.txt

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    testing_behat:
        <<: *defaults

        steps:
            - checkout

            - restore_cache:
                keys:
                    - composer-cache-testing_behat-{{ arch }}

            - attach_workspace:
                at: /tmp/workspace

            # Restore and Set job env variables. And EXIT IF NEED BE
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/set-env-vars.sh

            - run:
                name: run composer install to get the vendor directory
                command: composer install

            - run:
                name: log in
                command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

            - run:
                name: run functional tests with Behat
                command: ./.ci/scripts/tests/behat-tests.sh

            - save_cache:
                key: composer-cache-testing_behat-{{ arch }}
                paths:
                    - $HOME/.composer/cache

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    testing_a11y:
        <<: *defaults
        docker:
            - image: quay.io/peteinge/build-tools:a11y-1.x

        steps:
            - checkout

            - attach_workspace:
                at: /tmp/workspace

            # Restore and Set job env variables. And EXIT IF NEED BE
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/set-env-vars.sh

            - run:
                name: run Axe tests
                command: ./.ci/scripts/tests/axe-tests.sh

            - run:
                name: run Pa11y tests tests
                command: ./.ci/scripts/tests/pa11y-tests.sh

            - persist_to_workspace:
                root: /tmp/workspace
                paths:
                    - pa11y_bash_env.txt
                    - axe_bash_env.txt

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    results:
        <<: *defaults
        docker:
            - image: quay.io/peteinge/build-tools:a11y-1.x

        steps:
            - checkout

            - attach_workspace:
                at: /tmp/workspace

            # Restore and Set job env variables. And EXIT IF NEED BE
            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/set-env-vars.sh

            - run:
                name: Install Markdown to HTML
                command: npm install markdown-to-html -g

            - run:
                name: Report test results
                command: ./.ci/scripts/tests/results-reports.sh

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

    full_site_checks:
        <<: *defaults
        docker:
            - image: quay.io/peteinge/build-tools:a11y-1.x

        steps:
            - checkout

            - attach_workspace:
                at: /tmp/workspace

            - restore_cache:
                keys:
                    - npm-deps-full_site_checks-{{ checksum "package-lock.json" }}-{{ arch }}

            - run:
                name: run npm install
                command: npm install

            - run:
                name: Install broken-link-checker module
                command: npm install broken-link-checker -g

            - save_cache:
                key: npm-deps-full_site_checks-{{ checksum "package-lock.json" }}-{{ arch }}
                paths:
                    - ./node_modules

            # Init Env variables.
            - run:
                name: Init Environment Vars
                command: ./.ci/scripts/env/init-env-vars.sh

            - run:
                name: Setup Environment Vars
                command: ./.ci/scripts/env/scheduled-set-env-vars.sh

            - run:
                name: run Web Page Tests
                command: ./.ci/scripts/tests/web-page-tests.sh

            - run:
                name: run Broken Link Checker
                command: ./.ci/scripts/tests/link-checker-test.sh

            - run:
                name: Post Results
                command: ./.ci/scripts/tests/scheduled-results.sh

            - store_artifacts:
                path: /tmp/artifacts
                destination: artifacts

workflows:
    version: 2

    build_deploy_test:
        jobs:
            - build_and_deploy

            - testing_unit:
                requires:
                    - build_and_deploy

            - testing_vis_reg:
                requires:
                    - build_and_deploy

            - testing_performance:
                requires:
                    - build_and_deploy

            - testing_behat:
                requires:
                    - build_and_deploy

            - testing_a11y:
                requires:
                    - build_and_deploy

            - results:
                requires:
                    - testing_unit
                    - testing_vis_reg
                    - testing_performance
                    - testing_behat
                    - testing_a11y

    weekly_checks:
        triggers:
            - schedule:
                cron: "0 1 * * 1" # For Mondays
                # cron: "0 6 * * *" #UTC
                filters:
                    branches:
                        only:
                            - master
        jobs:
            - full_site_checks
